apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: init-platform-template
spec:
  arguments:
    parameters:
      - name: resource
        value: "JSON"
  templates:
    - name: init-platform
      inputs:
        parameters:
          - name: resource
      steps:
      - - name: parse
          template: parser
          arguments:
            parameters:
            - name: json
              value: "{{inputs.parameters.resource}}"
      - - name: install-modules
          template: install-modules 
          arguments:
            parameters:
            - name: namespace
              value: "{{steps.parse.outputs.parameters.namespace}}"
            - name: instance
              value: "{{steps.parse.outputs.parameters.instance}}"
            - name: modules.json
              value: "{{steps.parse.outputs.parameters.modules.json}}"

    - name: parser
      inputs:
        parameters:
          - name: json
      container:
        image: kkisilevsky/alpine-jq
        command: [sh, -c]
        args:
          - "echo -n '{{inputs.parameters.json}}' | jq -r 'metadata.namespace' > /tmp/namespace.txt
          && echo -n '{{inputs.parameters.json}}' | jq -r 'metadata.labels.instance' > /tmp/instance.txt
          && echo -n '{{inputs.parameters.json}}' | jq -r 'data.modules.json' > /tmp/modules.json"
      outputs:
        parameters:
          - name: namespace
            valueFrom:
              path: /tmp/namespace.txt
          - name: instance
            valueFrom:
              path: /tmp/instance.txt
          - name: modules.json
            valueFrom:
              path: /tmp/modules.json

    - name: install-modules
      inputs:
        parameters:
          - name: namespace
          - name: instance
          - name: modules.json
      container:
        image: kkisilevsky/alpine-jq
        command: [sh, -c]
        args:
          - "echo '{{inputs.parameters.namespace}}'
          && echo '{{inputs.parameters.instance}}'
          && echo '{{inputs.parameters.modules.json}}'"