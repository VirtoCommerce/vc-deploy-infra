apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-template-submittable
spec:
  arguments:
    parameters:
      - name: resource
        value: "JSON"
  templates:
    - name: creator
      inputs:
        parameters:
          - name: resource
      steps:
      - - name: parse
          template: parser
          arguments:
            parameters:
            - name: json
              value: "{{inputs.parameters.resource}}"
      - - name: create-database
          template: create-database-template
          arguments:
            parameters:
            - name: creator_app_name
              value: "{{steps.parse.outputs.parameters.app_name}"
            - name: creator_app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"

    - name: remover
      inputs:
        parameters:
          - name: resource
      steps:
      - - name: parse
          template: parser
          arguments:
            parameters:
            - name: json
              value: "{{inputs.parameters.resource}}"
      - - name: remove-database
          template: remove-database-template
          arguments:
            parameters:
            - name: remover_app_name
              value: "{{steps.parse.outputs.parameters.app_name}"
            - name: remover_app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"
      - - name: clean-up-indexes
          template: curator-template
          arguments:
            parameters:
            - name: curator_app_name
              value: "{{steps.parse.outputs.parameters.app_name}"
            - name: curator_app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"

    - name: parser
      inputs:
        parameters:
          - name: json
      container:
        image: kkisilevsky/alpine-jq
        command: [sh, -c]
        args:
          - "echo -n '{{inputs.parameters.json}}' | jq -r '.metadata.name' > /tmp/app_name.txt
          && echo '{{inputs.parameters.json}}' | jq -r '.spec.destination.namespace' > /tmp/app_namespace.txt"
      outputs:
        parameters:
        - name: app_name
          valueFrom:
            path: /tmp/app_name.txt
        - name: app_namespace       
          valueFrom:
            path: /tmp/app_namespace.txt

    - name: create-database-template
      inputs:
        parameters:
        - name: creator_app_name
        - name: creator_app_namespace
      container:
        image: mcr.microsoft.com/mssql-tools
        command:
          - "/opt/mssql-tools/bin/sqlcmd"
          - "-S"
          - "vc-dev-dbserver.database.windows.net"
          - "-U"
          - "virto@vc-dev-dbserver"
          - "-P"
          - "$(VC_DBSERVER_MASTER_PASSWORD)"
          - "-q"
          - "CREATE DATABASE [{{inputs.parameters.creator_app_name}}-platform_{{inputs.parameters.creator_app_namespace}}] AS COPY OF [webstore-platform_source] ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [vc-dev-elasticpool] ) )"
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
  
    - name: remove-database-template
      inputs:
        parameters:
        - name: remover_app_name
        - name: remover_app_namespace
      container:
        image: mcr.microsoft.com/mssql-tools
        command:
          - "/opt/mssql-tools/bin/sqlcmd"
          - "-S"
          - "vc-dev-dbserver.database.windows.net"
          - "-U"
          - "virto@vc-dev-dbserver"
          - "-P"
          - "$(VC_DBSERVER_MASTER_PASSWORD)"
          - "-q"
          - "DROP DATABASE [{{inputs.parameters.remover_app_name}}-platform_{{inputs.parameters.remover_app_namespace}}]"
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
    
    - name: curator-template
      inputs:
        parameters:
        - name: curator_app_name
        - name: curator_app_namespace
      resource:
        action: create
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: curator-
          spec:
            template:
              metadata:
                name: curator
              spec:
                containers:
                - name: curator
                  image: kkisilevsky/curator:v1
                  name: curator
                  env:
                    - name: SCOPE
                      value: "{{inputs.parameters.curator_app_name}}-platform{{inputs.parameters.curator_app_namespace}}"
                  command:
                    - "/bin/sh"
                    - "-c"
                  args:
                    - "envsubst '$${SCOPE}'< /etc/config/action_file.yml.template > /mnt/action_file.yml 
                    && /usr/bin/curator --config /etc/config/config.yml /mnt/action_file.yml"
                  volumeMounts:
                  - name: config
                    mountPath: /etc/config
                    readOnly: false
                volumes:
                - name: config
                  configMap:
                    name: curator-config
                restartPolicy: Never