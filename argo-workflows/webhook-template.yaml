apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-template-submittable
spec:
  parallelism: 1
  arguments:
    parameters:
      - name: resource
        value: "JSON"
  templates:
    - name: creator
      parallelism: 1
      inputs:
        parameters:
          - name: resource
      steps:
      - - name: parse
          template: parser
          arguments:
            parameters:
            - name: json
              value: "{{inputs.parameters.resource}}"
      - - name: create-database
          template: create-database-template
          arguments:
            parameters:
            - name: app_name
              value: "{{steps.parse.outputs.parameters.app_name}}"
            - name: app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"
        - name: create-elastic-role
          template: create-elastic-role-template
          arguments:
            parameters:
            - name: app_name
              value: "{{steps.parse.outputs.parameters.app_name}}"
            - name: app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"
      - - name: init-db-user
          template: init-db-user-template
          arguments:
            parameters:
            - name: app_name
              value: "{{steps.parse.outputs.parameters.app_name}}"
            - name: app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"

    - name: remover
      inputs:
        parameters:
          - name: resource
      steps:
      - - name: parse
          template: parser
          arguments:
            parameters:
            - name: json
              value: "{{inputs.parameters.resource}}"
      - - name: remove-database
          template: remove-database-template
          arguments:
            parameters:
            - name: app_name
              value: "{{steps.parse.outputs.parameters.app_name}}"
            - name: app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"
      - - name: clean-up-indexes
          template: curator-template
          arguments:
            parameters:
            - name: app_name
              value: "{{steps.parse.outputs.parameters.app_name}}"
            - name: app_namespace
              value: "{{steps.parse.outputs.parameters.app_namespace}}"

    - name: parser
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
      inputs:
        parameters:
          - name: json
      container:
        image: kkisilevsky/alpine-jq
        command: [sh, -c]
        args:
          - "echo -n '{{inputs.parameters.json}}' | jq -r '.metadata.name' > /tmp/app_name.txt
          && echo -n '{{inputs.parameters.json}}' | jq -r '.spec.destination.namespace' > /tmp/app_namespace.txt"
      outputs:
        parameters:
          - name: app_name
            valueFrom:
              path: /tmp/app_name.txt
          - name: app_namespace       
            valueFrom:
              path: /tmp/app_namespace.txt

    - name: create-database-template
      inputs:
        parameters:
          - name: app_name
          - name: app_namespace
      container:
        image: mcr.microsoft.com/mssql-tools
        command:
            - "/bin/sh"
            - "-c"
        args:
          - "/opt/mssql-tools/bin/sqlcmd -S vc-prod-dbserver.database.windows.net -U virto@vc-prod-dbserver -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE LOGIN [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user] WITH PASSWORD = '$(VC_CUSTOMER_DB_PASSWORD)'\"
          && /opt/mssql-tools/bin/sqlcmd -S vc-prod-dbserver.database.windows.net -U virto@vc-prod-dbserver -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE USER [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user] FROM LOGIN [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user]\"
          && /opt/mssql-tools/bin/sqlcmd -S vc-prod-dbserver.database.windows.net -U virto@vc-prod-dbserver -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE DATABASE [{{inputs.parameters.app_name}}-platform_{{inputs.parameters.app_namespace}}] AS COPY OF [webstore-platform_source] ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [vc-prod-elasticpool] ) )\""
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
          - name: VC_CUSTOMER_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-db-pass
                key: password

    - name: create-elastic-role-template
      inputs:
        parameters:
          - name: app_name
          - name: app_namespace
      container:
        image: curlimages/curl:7.77.0
        command:
            - "/bin/sh"
            - "-c"
        args:
          - "curl --user elastic:virtodevpass -X POST \"localhost:9200/_security/role/{{inputs.parameters.app_name}}-{{inputs.parameters.app_namespace}}-role?pretty\" -H 'Content-Type: application/json' -d'
            {
              \"cluster\": [\"all\"],
              \"indices\": [
                {
                \"names\": [ \"{{inputs.parameters.app_name}}-platform{{inputs.parameters.app_namespace}}\" ],
                \"privileges\": [\"all\"]
                }
              ]
            }'
            &&
            curl --user elastic:virtodevpass -X POST \"localhost:9200/_security/user/{{inputs.parameters.app_name}}-{{inputs.parameters.app_namespace}}-user?pretty\" -H 'Content-Type: application/json' -d'
            {
              \"password\" : \"l0ng-r4nd0m-p@ssw0rd\",
              \"roles\" : [ \"{{inputs.parameters.app_name}}-{{inputs.parameters.app_namespace}}-role\" ],
              \"full_name\" : \"{{inputs.parameters.app_name}}-{{inputs.parameters.app_namespace}}\",
              \"email\" : \"{{inputs.parameters.app_name}}-{{inputs.parameters.app_namespace}}@example.com\"
            }'"
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
          - name: VC_CUSTOMER_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-db-pass
                key: password

    - name: init-db-user-template
      inputs:
        parameters:
          - name: app_name
          - name: app_namespace
      retryStrategy:
        limit: "30"
        # retryPolicy: "Always"
        backoff:
          duration: "10s"       # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"
          factor: "1"
          maxDuration: "5m"
      container:
        image: mcr.microsoft.com/mssql-tools
        command:
            - "/bin/sh"
            - "-c"
        args:
          - "/opt/mssql-tools/bin/sqlcmd -S vc-prod-dbserver.database.windows.net -U virto@vc-prod-dbserver -P '$(VC_DBSERVER_MASTER_PASSWORD)' -d {{inputs.parameters.app_name}}-platform_{{inputs.parameters.app_namespace}} -q \"CREATE USER [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user] FROM LOGIN [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user]; ALTER ROLE db_owner ADD MEMBER [{{inputs.parameters.app_name}}_{{inputs.parameters.app_namespace}}_user];\""
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
  
    - name: remove-database-template
      inputs:
        parameters:
          - name: app_name
          - name: app_namespace
      container:
        image: mcr.microsoft.com/mssql-tools
        command:
          - "/opt/mssql-tools/bin/sqlcmd"
          - "-S"
          - "vc-prod-dbserver.database.windows.net"
          - "-U"
          - "virto@vc-prod-dbserver"
          - "-P"
          - "$(VC_DBSERVER_MASTER_PASSWORD)"
          - "-q"
          - "DROP DATABASE [{{inputs.parameters.app_name}}-platform_{{inputs.parameters.app_namespace}}]"
        env: 
          - name: VC_DBSERVER_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-dbserver-password
                key: password
    
    - name: curator-template
      inputs:
        parameters:
          - name: app_name
          - name: app_namespace
      resource:
        action: create
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            generateName: curator-
          spec:
            template:
              metadata:
                name: curator
              spec:
                containers:
                - name: curator
                  image: kkisilevsky/curator:v1
                  name: curator
                  env:
                    - name: SCOPE
                      value: "{{inputs.parameters.app_name}}-platform{{inputs.parameters.app_namespace}}"
                  command:
                    - "/bin/sh"
                    - "-c"
                  args:
                    - "envsubst '$${SCOPE}'< /etc/config/action_file.yml.template > /mnt/action_file.yml 
                    && /usr/bin/curator --config /etc/config/config.yml /mnt/action_file.yml"
                  volumeMounts:
                  - name: config
                    mountPath: /etc/config
                    readOnly: false
                volumes:
                - name: config
                  configMap:
                    name: curator-config
                restartPolicy: Never